<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.ssm.model.User">
    <id column="user_Uid" jdbcType="INTEGER" property="uid" />
    <result column="user_uname" jdbcType="VARCHAR" property="uname" />
    <result column="user_user" jdbcType="VARCHAR" property="user" />
    <result column="user_password" jdbcType="VARCHAR" property="password" />
    <result column="user_image" jdbcType="VARCHAR" property="image" />
    <result column="user_state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user.`Uid` as `user_Uid`, user.uname as user_uname, user.`user` as `user_user`, user.`password` as `user_password`, 
    user.image as user_image, user.`state` as `user_state`
  </sql>
  <select id="selectByExample" parameterType="com.ssm.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user user
    where user.`Uid` = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where `Uid` = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.model.UserExample">
    delete from user user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="Uid" keyProperty="uid" parameterType="com.ssm.model.User" useGeneratedKeys="true">
    insert into user (uname, `user`, `password`, 
      image, `state`)
    values (#{uname,jdbcType=VARCHAR}, #{user,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="Uid" keyProperty="uid" parameterType="com.ssm.model.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uname != null">
        uname,
      </if>
      <if test="user != null">
        `user`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uname != null">
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.model.UserExample" resultType="java.lang.Long">
    select count(*) from user user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user user
    <set>
      <if test="record.uid != null">
        user.`Uid` = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.uname != null">
        user.uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.user != null">
        user.`user` = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        user.`password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        user.image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        user.`state` = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user user
    set user.`Uid` = #{record.uid,jdbcType=INTEGER},
      user.uname = #{record.uname,jdbcType=VARCHAR},
      user.`user` = #{record.user,jdbcType=VARCHAR},
      user.`password` = #{record.password,jdbcType=VARCHAR},
      user.image = #{record.image,jdbcType=VARCHAR},
      user.`state` = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.model.User">
    update user
    <set>
      <if test="uname != null">
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="user != null">
        `user` = #{user,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where `Uid` = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.model.User">
    update user
    set uname = #{uname,jdbcType=VARCHAR},
      `user` = #{user,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER}
    where `Uid` = #{uid,jdbcType=INTEGER}
  </update>
</mapper>